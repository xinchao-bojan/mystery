# Generated by Django 4.0.2 on 2022-02-26 16:38

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=63, unique=True, verbose_name='Адрес электронной почты')),
                ('first_name', models.CharField(max_length=255, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=255, verbose_name='Фамилия')),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('attempts', models.PositiveIntegerField(default=3, verbose_name='Количество попыток')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255, verbose_name='Текст ответа')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст вопроса')),
                ('supporting_image', models.ImageField(blank=True, null=True, upload_to='support', verbose_name='Вспомогательное изображение')),
                ('slug', models.SlugField(max_length=31, unique=True, verbose_name='Буквенный идентификатор')),
            ],
        ),
        migrations.CreateModel(
            name='UserAnswerInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=datetime.datetime(2022, 2, 26, 16, 38, 31, 372719))),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.answer', verbose_name='Вопрос')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='Prompt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='prompt', verbose_name='Файл с подсказкой')),
                ('visible', models.BooleanField(default=False, verbose_name='Видимость')),
                ('question', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main_app.question', verbose_name='Вопрос')),
            ],
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='main_app.question', verbose_name='Вопрос'),
        ),
        migrations.AddField(
            model_name='answer',
            name='subsequent_question',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='previous_answer', to='main_app.question', verbose_name='Следующий вопрос'),
        ),
        migrations.AddField(
            model_name='answer',
            name='user_list',
            field=models.ManyToManyField(through='main_app.UserAnswerInfo', to=settings.AUTH_USER_MODEL, verbose_name='Список ответивших пользователей'),
        ),
    ]
